{"version":3,"sources":["todo list/category/CategoryItem.js","todo list/category/CategoryApp.js","todo list/category/AddCategory.js","todo list/TodoItem.js","todo list/TodoApp.js","about/About.js","contact/Contact.js","header/Header.js","todo list/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["CategoryItem","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","check","textDecoration","props","complete","react_default","a","createElement","style","lists","text","Component","CategoryApp","list","category","map","category_CategoryItem","uuid","v4","completed","AddCategory","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","cat","e","setState","target","catSub","preventDefault","addCat","id","onSubmit","type","onChange","bind","padding","border","TodoItem","_this$props$list","backgroundColor","color","fontSize","display","justifyContent","markComplete","checked","category_CategoryApp","category_AddCategory","className","onClick","delList","TodoApp","todo_list_TodoItem","About","Fragment","Contact","header","textAlign","Header","react_router_dom","to","AddTodo","input","cValue","addList","flexDirection","width","App","newTodo","toConsumableArray","item","filter","temp","catsss","push","_this2","header_Header","react_router","exact","path","render","todo_list_AddTodo","todo_list_TodoApp","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.813111ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class CategoryItem extends Component {\r\n    render() {\r\n        const check ={\r\n            textDecoration: this.props.complete ? \"line-through\" : \"none\"\r\n        }\r\n        return (<p style={check}>{this.props.lists.text}</p> );\r\n    }\r\n}\r\n\r\nexport default CategoryItem\r\n","import React, { Component } from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport uuid from 'uuid';\r\n\r\nexport class CategoryApp extends Component {\r\n    render() {\r\n        const lists = this.props.list;\r\n        if(lists.category) {\r\n            return lists.category.map( (list) => (\r\n                <CategoryItem key={uuid.v4()} complete={lists.completed}  lists={list}/>\r\n            ) )\r\n        } else {\r\n            return false;\r\n        }\r\n}\r\n}\r\n\r\nexport default CategoryApp\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddCategory extends Component {\r\n    state = {\r\n        category: [ ]\r\n    }\r\n    cat = (e) => {\r\n        this.setState({category: e.target.value})\r\n    }\r\n    catSub = (e) => {\r\n        e.preventDefault();\r\n        this.props.addCat(this.state.category, this.props.id);\r\n        this.setState({category: \"\"});\r\n    }\r\n    render() {\r\n        const btn ={\r\n            padding: \"10px\",\r\n            border: \"0\"\r\n        }\r\n        return (\r\n            <form onSubmit={this.catSub}>\r\n                <input type=\"text\" onChange={this.cat.bind(this)} value={this.state.category} /> {\" \"} \r\n                <input type=\"submit\" style={btn} value=\"Add Category\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddCategory\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport CategoryApp from './category/CategoryApp';\r\nimport AddCategory from './category/AddCategory';\r\n\r\nclass TodoItem extends Component {\r\n\r\n  render() {\r\n    const lists = {\r\n      padding: \"15px 25px\",\r\n      backgroundColor: \"#ce8512\",\r\n      color: \"#fff\",\r\n      fontSize: \"25px\",\r\n      border: \"1px solid #000\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\"\r\n    }\r\n    const { id, text, completed} = this.props.list;\r\n    const check = {\r\n      textDecoration: this.props.list.completed ? \"line-through\" : \"none\"\r\n    }\r\n     return (\r\n         <div style={lists}>\r\n            <div>\r\n              <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}  checked={completed}/> {' '} <span style={check}>{text}</span>\r\n              <div>\r\n                <CategoryApp list={this.props.list}/>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <AddCategory id={id} addCat={this.props.addCat}/> \r\n              <button type=\"button\" className=\"btn\" onClick={this.props.delList.bind(this, id)}>x</button>\r\n            </div>\r\n         </div>\r\n     )\r\n  }\r\n}\r\n\r\n\r\nexport default TodoItem","import React, { Component } from 'react';\r\nimport TodoItem from '../todo list/TodoItem';\r\n\r\nexport class TodoApp extends Component {\r\n  render() {\r\n      const lists = this.props.list;\r\n    return lists.map( (list) => (\r\n        <TodoItem key={list.id} list={list} delList={this.props.delList} addCat={this.props.addCat} markComplete={this.props.markComplete} />\r\n    ) )\r\n  }\r\n}\r\n\r\n\r\nexport default TodoApp\r\n","import React, { Component } from 'react';\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>About</h1>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Contact</h1>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n//styling\r\nconst header = {\r\n    backgroundColor: \"#101\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n    padding: \"15px 0\"\r\n}\r\n\r\n\r\nexport class Header extends Component {\r\n    \r\n  render() {\r\n    return (\r\n        <header style={header}>\r\n        <div>\r\n            <h1>TO DO List</h1>\r\n        </div>\r\n        <div className=\"navMenu\">\r\n            <ul>\r\n                <li className=\"navItem\">\r\n                    <Link to=\"/todo-app\">Home</Link>\r\n                </li>\r\n                <li className=\"navItem\">\r\n                    <Link to=\"/about\">About</Link>\r\n                </li>\r\n                <li className=\"navItem\">\r\n                    <Link to=\"/contact\">Contact</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    state ={\r\n        input: ''\r\n    }\r\n    cValue = (e) => {\r\n      this.setState( {input : e.target.value});\r\n    }\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.addList(this.state.input);\r\n      this.setState( {input : \"\"});      \r\n    }\r\n  render() {\r\n    const inputs = {\r\n      display: \"flex\",\r\n      flexDirection: \"row\"\r\n    }\r\n    const input1 = {\r\n      padding: \"10px\",\r\n      width: \"80%\"\r\n    }\r\n    const input2 = {\r\n      width: \"20%\"\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} style={inputs}>\r\n          <input style={input1} type=\"text\" value={this.state.input} onChange={this.cValue}/>\r\n          <input style={input2} type=\"submit\"/>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport uuid from'uuid';\nimport TodoApp from './todo list/TodoApp';\nimport About from './about/About';\nimport Contact from './contact/Contact';\nimport Header from './header/Header';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport AddTodo from './todo list/AddTodo';\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      list: [\n        {\n          id: uuid.v4(),\n          text: \"this is my first text\",\n          completed: false,\n          category: []\n        },\n        {\n          id: uuid.v4(),\n          text: \"this is my second text\",\n          completed: false,\n          category: []\n        },\n        {\n          id: uuid.v4(),\n          text: \"this is my 3rd text\",\n          completed: true,\n          category: []\n        }\n      ]\n    }\n    this.addList = (text) => {\n      const newTodo = {\n        id: uuid.v4(),\n        text: text,\n        completed: false,\n        category: []\n      }\n      if(text) {\n        this.setState({list: [...this.state.list, newTodo]})\n      }\n    }\n    this.markComplete = (id) => {\n      this.setState({list: this.state.list.map( item => {\n        if(item.id===id){\n          item.completed = !item.completed;\n        }\n        return item\n      })})\n    }\n    this.delList = (id) => {\n      this.setState({ list: [...this.state.list.filter( list => list.id !== id)] })\n    }\n    this.addCat = (cat,id) => {\n      let temp = {\n        id: uuid.v4(),\n        text: cat\n      }\n      const catsss = this.state.list.map(item => {\n        if(item.id === id) {\n          item.category.push(temp);\n        }\n        return item;\n      })\n      this.setState({list: catsss})\n    }\n\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n            <Route exact path=\"/todo-app\" render={props => (\n              <React.Fragment>\n                <AddTodo addList={this.addList}/>\n                <TodoApp list={this.state.list} delList={this.delList} addCat={this.addCat} markComplete={this.markComplete}/>\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/contact\" component={Contact} />\n        </div>\n      </Router>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}